#include <iostream>
using namespace std;
#include "Bookarray.h"

Bookarray::Bookarray()
{ 
  maxCollIndex = 0;

  for (int i=0; i<MAX_COLL_SIZE; ++i) {
    collection[i] = 0;
  }
}

/*Bookarray::~Bookarray()
{
  for (int i=0; i<maxCollIndex; ++i)
    delete collection[i];
}
*/
/*int Bookarray::addBook(Book* book)
{
  if (maxCollIndex >= MAX_COLL_SIZE - 1) {
    return C_NOK;
  }

  collection[maxCollIndex++] = book;

  return C_OK;
}*/

Bookarray& Bookarray::operator+=(Book* book)
{
  if (this->maxCollIndex >= MAX_COLL_SIZE - 1) {
  }

  this->collection[maxCollIndex++] = book;

  return *this;
}

void Bookarray::remBook(int index)
{
  (collection[index])->setStatus(CHECKED_IN);
  collection[index] = NULL;
}

int Bookarray::findBook(int id, Book** book, int* index)
{ 
  cout<<maxCollIndex<<endl;
  for (int i=0; i<maxCollIndex; ++i) {
    if (collection[i] == 0)
      continue;
    if (collection[i]->getId() == id) {
      *book  = collection[i];
      *index = i;
      return C_OK;
      
    }
  }
  *book  =  0;
  *index = -1;
  return C_NOK;
}

Book* Bookarray::getBook(int index){ 
 
  if (index < 0 || index >= maxCollIndex)
    return 0;
    return collection[index]; 

}

int Bookarray::getMaxCollIndex()
{
   return maxCollIndex;
}

